sudo: false
dist: xenial
services: docker
language: node_js
cache:
  directories:
    - node_modules
notifications:
  email: false
  slack:
    on_failure: always
    on_success: never
    on_pull_requests: false
node_js:
  - '10'
before_install:
  - echo "//registry.npmjs.org/:_authToken=\${NPM_TOKEN}" > .npmrc
install:
  - npm install
jobs:
  include:
######################## PR TO STAGING ########################
    - stage: Test-PR-staging
      if: branch = staging AND type = pull_request
      script: npm run test
      name: kubernetes-monitor PR tests
######################## MERGE TO STAGING ########################
    - stage: test-and-build
      if: branch = staging AND type = push
      script: npm run lint &&
              npm run build &&
              npm run test:unit &&
              docker login --username ${DOCKERHUB_USER} --password ${DOCKERHUB_PASSWORD} &&
              IMAGE_NAME_CANDIDATE=snyk/kubernetes-monitor:staging-candidate &&
              ./scripts/build-image.sh ${IMAGE_NAME_CANDIDATE} &&
              docker push ${IMAGE_NAME_CANDIDATE} &&
              ./scripts/slack-notify-push.sh ${IMAGE_NAME_CANDIDATE} &&
              KUBERNETES_MONITOR_IMAGE_NAME_AND_TAG=${IMAGE_NAME_CANDIDATE} npm run test:integration ||
              ( ./scripts/slack-notify-failure.sh "staging-test" && false )
      name: Test and Build
    - stage: tag-and-push
      if: branch = staging AND type = push
      script: docker login --username ${DOCKERHUB_USER} --password ${DOCKERHUB_PASSWORD} &&
              npx semantic-release &&
              NEW_VERSION=`cat ./package.json | jq -r '.version'` &&
              ./scripts/approve-image.sh $NEW_VERSION ||
              ( ./scripts/slack-notify-failure.sh "staging-release" && false )
      name: Tag and Push
######################## PR TO MASTER ########################
    - stage: pre-publish
      if: branch = master AND type = pull_request AND head_branch = staging
      script: ./scripts/slack-notify-pr.sh
      name: pre-publish notification
######################## MERGE TO MASTER ########################
    - stage: Publish
      if: branch = master AND type = push
      script: LATEST_TAG_WITH_V=`git describe --abbrev=0 --tags ${TRAVIS_COMMIT}` &&
              LATEST_TAG=${LATEST_TAG_WITH_V:1} &&
              IMAGE_NAME_APPROVED=snyk/kubernetes-monitor:${LATEST_TAG}-approved &&
              IMAGE_NAME_PUBLISHED=snyk/kubernetes-monitor:${LATEST_TAG} &&
              docker login --username ${DOCKERHUB_USER} --password ${DOCKERHUB_PASSWORD} &&
              docker pull ${IMAGE_NAME_APPROVED} &&
              docker tag ${IMAGE_NAME_APPROVED} ${IMAGE_NAME_PUBLISHED} &&
              docker push ${IMAGE_NAME_PUBLISHED} &&
              ./scripts/slack-notify-push.sh ${IMAGE_NAME_PUBLISHED} &&
              docker tag ${IMAGE_NAME_APPROVED} snyk/kubernetes-monitor:latest &&
              docker push ${IMAGE_NAME_PUBLISHED} &&
              ./scripts/slack-notify-push.sh snyk/kubernetes-monitor:latest ||
              ( ./scripts/slack-notify-failure.sh master && false )
      name: publish the kubernetes-monitor (npm, container, helm)
branches:
  only:
   - master
   - staging

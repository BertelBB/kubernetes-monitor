description: |
  Packages a new Operator and pushes it to Snyk's fork of
  the OpenShift upstream-community-operators.

executor: redhat-openshift/default

working_directory: ~/kubernetes-monitor

steps:
  - checkout

  - add_ssh_keys:
      fingerprints:
        - 06:c3:d4:10:0d:ef:37:6c:ec:b9:fb:6e:ed:09:e7:40

  - run:
      name: Install required packages
      command: |
        python -m pip install requests pyyaml PyGithub

  - install_python_requests

  - run:
      name: Get last released Operator version
      command: |
        set -xeo pipefail
        LAST_OPERATOR_VERSION=$(python ./scripts/operator/get_last_published_operator_version.py)
        echo "export LAST_OPERATOR_VERSION=${LAST_OPERATOR_VERSION}" >> $BASH_ENV

  - run:
      name: Get new Operator version
      command: |
        LATEST_TAG_WITH_V=`git describe --abbrev=0 --tags ${CIRCLE_SHA1}`
        LATEST_TAG=${LATEST_TAG_WITH_V:1}
        NEW_OPERATOR_VERSION=${LATEST_TAG}
        echo "export NEW_OPERATOR_VERSION=${NEW_OPERATOR_VERSION}" >> $BASH_ENV

  - run:
      name: End tests early if no new Operator is to be released
      command: |
        if [[ "${NEW_OPERATOR_VERSION}" == "${LAST_OPERATOR_VERSION}" ]]; then
          echo "export NOTHING_TO_TEST=true" >> $BASH_ENV
          exit 1
        fi

  - run:
      name: Package Operator
      command: |
        ./scripts/operator/package-operator.sh "${NEW_OPERATOR_VERSION}" "${NEW_OPERATOR_VERSION}" "${NEW_OPERATOR_VERSION}" "${LAST_OPERATOR_VERSION}"

  - run:
      name: Push new Operator to the fork of the upstream-community-operators repository
      command: |
        CURRENT_DIRECTORY=$(pwd)
        COMMUNITY_FOLDER_LOCATION="upstream-community-operators"
        ./scripts/operator/push-operator.sh "${CURRENT_DIRECTORY}" "${COMMUNITY_FOLDER_LOCATION}"
  - run:
      name: Open a Pull Request to the operator-framework/community-operators repository for upstream-community-operators
      command: |
        COMMUNITY_FOLDER_LOCATION="upstream-community-operators"
        python ./scripts/operator/raise_pr_to_community_operators_from_our_fork.py "${COMMUNITY_FOLDER_LOCATION}" "${NEW_OPERATOR_VERSION}"
  - run:
      name: Notify Slack on new branch in snyk/upstream-community-operators
      command: |
        ./scripts/slack/notify_success_operator_push.py "${NEW_OPERATOR_VERSION}" "${COMMUNITY_FOLDER_LOCATION}"

  - run:
      name: Notify Slack on failure
      command: |
        if [[ "${NOTHING_TO_TEST}" != "true" ]]; then
          ./scripts/slack/notify_failure.py "push-new-operator on upstream-community-operators"
        fi
      when: on_fail
